{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ahmed/WebstormProjects/validator-fe/src/components/DataLister.js\";\nimport React, { Component } from 'react';\nimport Rows from './Rows';\nimport { codeToCountry, codeToRegex } from './../Resources';\n\nclass DataLister extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isValid = (phoneNumber, code) => {\n      return RegExp(codeToRegex[code]).test(phoneNumber) ? 'valid' : 'not valid';\n    };\n\n    this.fetchData = () => {\n      fetch('http://localhost:8080/getData').then(res => res.json()).then(res => this.setState({\n        data: res.reduce((customers, currCustomer) => {\n          let customer = {\n            name: currCustomer.name,\n            phoneNumber: currCustomer.phoneNumber,\n            code: currCustomer.code,\n            country: currCustomer.country,\n            validation: currCustomer.state\n          };\n          customers.push(customer);\n          return customers;\n        }, []),\n        dataReady: true\n      })).then(() => {\n        this.setState({\n          originalData: [...this.state.data]\n        });\n      }).catch(e => this.setState({\n        error: e,\n        dataReady: false\n      }));\n    };\n\n    this.fetchDataByCountry = () => {\n      fetch('http://localhost:8080/getDataByCountry/' + this.state.filterKey).then(res => res.json()).then(res => this.setState({\n        data: res.reduce((customers, currCustomer) => {\n          let customer = {\n            name: currCustomer.name,\n            phoneNumber: currCustomer.phoneNumber,\n            code: currCustomer.code,\n            country: currCustomer.country,\n            validation: currCustomer.state\n          };\n          customers.push(customer);\n          return customers;\n        }, []),\n        dataReady: true\n      })).catch(e => this.setState({\n        error: e,\n        dataReady: false\n      }));\n    };\n\n    this.fetchDataByState = () => {\n      fetch('http://localhost:8080/getDataByState/' + this.state.filterKey).then(res => res.json()).then(res => this.setState({\n        data: res.reduce((customers, currCustomer) => {\n          let customer = {\n            name: currCustomer.name,\n            phoneNumber: currCustomer.phoneNumber,\n            code: currCustomer.code,\n            country: currCustomer.country,\n            validation: currCustomer.state\n          };\n          customers.push(customer);\n          return customers;\n        }, []),\n        dataReady: true\n      })).catch(e => this.setState({\n        error: e,\n        dataReady: false\n      }));\n    };\n\n    this.filterData = e => {\n      if (this.state.selection === 'country') {\n        this.fetchDataByCountry();\n      } else if (this.state.selection === 'validation') {\n        this.fetchDataByState();\n      }\n    };\n\n    this.handleChange = e => {\n      if (e.target.id === 'filterSelection') {\n        this.setState({\n          selection: e.target.value\n        });\n      } else if (e.target.id === 'searchKey') {\n        if (e.target.value === '') this.reset();\n        this.setState({\n          filterKey: e.target.value\n        });\n      }\n    };\n\n    this.reset = () => {\n      /* reset the data */\n      this.setState({\n        data: [...this.state.originalData]\n      });\n    };\n\n    this.state = {\n      dataReady: false,\n      data: [],\n      originalData: [],\n      filterKey: '',\n      selection: '',\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    /* If the data is not loaded */\n    if (!this.state.dataReady || this.state.error) {\n      return this.state.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 75\n      }, this);\n    }\n    /* Filling the table with rows */\n\n\n    const rows = [];\n    rows.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }, this));\n    let customer;\n\n    for (let i = 0; i < this.state.data.length; i++) {\n      customer = this.state.data[i];\n      rows.push( /*#__PURE__*/_jsxDEV(Rows, {\n        customerName: customer.name,\n        phone: customer.phoneNumber,\n        country: customer.country,\n        code: '+' + customer.code,\n        state: customer.validation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 23\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          paddingLeft: 900,\n          fontSize: 30\n        },\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"filterSelection\",\n        onChange: this.handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          selected: true,\n          disabled: true,\n          hidden: true,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"country\",\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"validation\",\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"searchKey\",\n        name: \"key\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        id: \"filter\",\n        value: \"Filter\",\n        onClick: this.filterData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        id: \"reset\",\n        value: \"Reset\",\n        onClick: this.reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default DataLister;","map":{"version":3,"sources":["/home/ahmed/WebstormProjects/validator-fe/src/components/DataLister.js"],"names":["React","Component","Rows","codeToCountry","codeToRegex","DataLister","constructor","props","isValid","phoneNumber","code","RegExp","test","fetchData","fetch","then","res","json","setState","data","reduce","customers","currCustomer","customer","name","country","validation","state","push","dataReady","originalData","catch","e","error","fetchDataByCountry","filterKey","fetchDataByState","filterData","selection","handleChange","target","id","value","reset","componentDidMount","render","message","rows","textAlign","i","length","overflow","paddingLeft","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Rows from './Rows';\nimport { codeToCountry, codeToRegex } from './../Resources';\n\nclass DataLister extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataReady: false,\n            data: [],\n            originalData: [],\n            filterKey: '',\n            selection: '',\n            error: null\n        };\n    }\n\n    isValid = (phoneNumber, code) => {\n        return RegExp(codeToRegex[code]).test(phoneNumber) ? 'valid' : 'not valid';\n    };\n\n    fetchData = () => {\n        fetch('http://localhost:8080/getData')\n            .then((res) => res.json())\n            .then((res) => this.setState({\n                data: res.reduce((customers, currCustomer) => {\n\n                    let customer = {\n                        name: currCustomer.name,\n                        phoneNumber: currCustomer.phoneNumber,\n                        code: currCustomer.code,\n                        country: currCustomer.country,\n                        validation: currCustomer.state\n                    };\n\n                    customers.push(customer);\n\n                    return customers;\n                }, []),\n\n                dataReady: true\n            }))\n            .then(() => {\n                this.setState({ originalData: [...this.state.data] } )\n            })\n            .catch((e) => this.setState({ error: e, dataReady: false }));\n    };\n\n    fetchDataByCountry = () => {\n\n        fetch('http://localhost:8080/getDataByCountry/' + this.state.filterKey)\n            .then((res) => res.json())\n            .then((res) => this.setState({\n                data: res.reduce((customers, currCustomer) => {\n\n                    let customer = {\n                        name: currCustomer.name,\n                        phoneNumber: currCustomer.phoneNumber,\n                        code: currCustomer.code,\n                        country: currCustomer.country,\n                        validation: currCustomer.state\n                    };\n\n                    customers.push(customer);\n\n                    return customers;\n                }, []),\n\n                dataReady: true\n            }))\n            .catch((e) => this.setState({ error: e, dataReady: false }));\n    };\n\n    fetchDataByState = () => {\n\n        fetch('http://localhost:8080/getDataByState/' + this.state.filterKey)\n            .then((res) => res.json())\n            .then((res) => this.setState({\n                data: res.reduce((customers, currCustomer) => {\n\n                    let customer = {\n                        name: currCustomer.name,\n                        phoneNumber: currCustomer.phoneNumber,\n                        code: currCustomer.code,\n                        country: currCustomer.country,\n                        validation: currCustomer.state\n                    };\n\n                    customers.push(customer);\n\n                    return customers;\n                }, []),\n\n                dataReady: true\n            }))\n            .catch((e) => this.setState({ error: e, dataReady: false }));\n    };\n\n\n    filterData = (e) => {\n        if(this.state.selection === 'country')\n        {\n            this.fetchDataByCountry();\n        }\n        else if(this.state.selection === 'validation')\n        {\n            this.fetchDataByState();\n        }\n    };\n\n    handleChange = (e) => {\n\n        if (e.target.id === 'filterSelection')\n        {\n            this.setState({ selection: e.target.value });\n        }\n        else if (e.target.id === 'searchKey')\n        {\n            if (e.target.value === '')\n                this.reset();\n\n            this.setState({ filterKey : e.target.value });\n        }\n    };\n\n    reset = () => {\n        /* reset the data */\n        this.setState({\n            data: [...this.state.originalData]\n        })\n    };\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    render() {\n\n        /* If the data is not loaded */\n        if (!this.state.dataReady || this.state.error)\n        {\n            return this.state.error ? <p>{this.state.error.message}</p> : <div />\n        }\n\n        /* Filling the table with rows */\n        const rows: JSX.Element[] = [];\n        rows.push(<tr>\n                        <th style={{textAlign: \"center\"}}>Name</th>\n                        <th style={{textAlign: \"center\"}}>Country</th>\n                        <th style={{textAlign: \"center\"}}>Code</th>\n                        <th style={{textAlign: \"center\"}}>Phone</th>\n                        <th style={{textAlign: \"center\"}}>State</th>\n                  </tr>);\n\n        let customer;\n\n        for (let i = 0; i < this.state.data.length; i++)\n        {\n            customer = this.state.data[i];\n\n            rows.push(<Rows customerName={customer.name} phone={customer.phoneNumber} country={customer.country} code={'+' + customer.code} state={customer.validation}/>)\n        }\n\n        return (\n                <div style={{overflow:\"auto\"}} >\n                    <label style={{paddingLeft: 900, fontSize: 30}}>Filter</label>\n\n                    <select id={\"filterSelection\"} onChange={ this.handleChange }>\n                        <option value=\"\" selected disabled hidden>Select</option>\n                        <option value={\"country\"}>Country</option>\n                        <option value={\"validation\"}>State</option>\n                    </select>\n\n                    <input type=\"text\" id=\"searchKey\" name=\"key\" onChange={ this.handleChange }/>\n                    <input type={\"submit\"} id={\"filter\"} value={\"Filter\"} onClick={ this.filterData }/>\n                    <input type={\"submit\"} id={\"reset\"}  value={\"Reset\"} onClick={ this.reset }/>\n\n                    <table>\n                        {rows}\n                    </table>\n                </div>\n        );\n    }\n}\n\nexport default DataLister;\n"]},"metadata":{},"sourceType":"module"}