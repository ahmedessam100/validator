{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ahmed/WebstormProjects/test/src/components/DataLister.js\";\nimport React, { Component } from 'react';\nimport Rows from \"./Rows\";\nconst countryToCode = {\n  'Cameroon': '237',\n  'Ethiopia': '251',\n  'Morocco': '212',\n  'Mozambique': '258',\n  'Uganda': '256'\n};\nconst codeToCountry = {\n  '237': 'Cameroon',\n  '251': 'Ethiopia',\n  '212': 'Morocco',\n  '258': 'Mozambique',\n  '256': 'Uganda'\n};\nconst codeToRegex = {\n  '237': \"\\\\(237\\\\)\\\\ ?[2368]\\\\d{7,8}$\",\n  '251': \"\\\\(251\\\\)\\\\ ?[1-59]\\\\d{8}$\",\n  '212': \"\\\\(212\\\\)\\\\ ?[5-9]\\\\d{8}$\",\n  '258': \"\\\\(258\\\\)\\\\ ?[28]\\\\d{7,8}$\",\n  '256': \"\\\\(256\\\\)\\\\ ?\\\\d{9}$\"\n};\n\nclass DataLister extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isValid = (phoneNumber, code) => {\n      return RegExp(codeToRegex[code]).test(phoneNumber);\n    };\n\n    this.fetchData = () => {\n      fetch('http://localhost:8080/getData').then(res => res.json()).then(res => this.setState({\n        data: res.reduce((customers, currCustomer) => {\n          console.log(currCustomer.name);\n          let [code, phoneNumber] = currCustomer.phoneNumber.split(' ');\n          code = code.replace('(', '').replace(')', '');\n          let customer = {\n            name: currCustomer.name,\n            phoneNumber: phoneNumber,\n            code: code,\n            country: codeToCountry[code],\n            validation: this.isValid(currCustomer.phoneNumber, code)\n          };\n          customers.push(customer);\n          return customers;\n        }, []),\n        dataReady: true\n      }));\n    };\n\n    this.state = {\n      dataReady: false,\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    if (!this.state.dataReady) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }, this);\n    }\n    /* Filling the cards array with cards */\n\n\n    const rows = [];\n    rows.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }, this));\n    let customer;\n\n    for (let i = 0; i < this.state.data.length; i++) {\n      customer = this.state.data[i];\n      rows.push( /*#__PURE__*/_jsxDEV(Rows, {\n        customerName: customer.name,\n        phone: customer.phoneNumber,\n        country: customer.country,\n        code: customer.code,\n        state: customer.validation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 23\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DataLister;","map":{"version":3,"sources":["/home/ahmed/WebstormProjects/test/src/components/DataLister.js"],"names":["React","Component","Rows","countryToCode","codeToCountry","codeToRegex","DataLister","constructor","props","isValid","phoneNumber","code","RegExp","test","fetchData","fetch","then","res","json","setState","data","reduce","customers","currCustomer","console","log","name","split","replace","customer","country","validation","push","dataReady","state","componentDidMount","render","rows","i","length","overflow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Rows from \"./Rows\";\n\nconst countryToCode = {'Cameroon': '237',\n                       'Ethiopia': '251',\n                        'Morocco': '212',\n                        'Mozambique': '258',\n                        'Uganda': '256'\n};\n\nconst codeToCountry =  {'237': 'Cameroon',\n                        '251': 'Ethiopia',\n                        '212': 'Morocco',\n                        '258': 'Mozambique',\n                        '256': 'Uganda'\n};\n\nconst codeToRegex = {'237': \"\\\\(237\\\\)\\\\ ?[2368]\\\\d{7,8}$\",\n                     '251': \"\\\\(251\\\\)\\\\ ?[1-59]\\\\d{8}$\",\n                     '212': \"\\\\(212\\\\)\\\\ ?[5-9]\\\\d{8}$\",\n                     '258': \"\\\\(258\\\\)\\\\ ?[28]\\\\d{7,8}$\",\n                     '256': \"\\\\(256\\\\)\\\\ ?\\\\d{9}$\"\n};\n\nclass DataLister extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataReady: false,\n            data: []\n        };\n    }\n\n    isValid = (phoneNumber, code) => {\n        return RegExp(codeToRegex[code]).test(phoneNumber);\n    };\n\n    fetchData = () => {\n\n        fetch('http://localhost:8080/getData')\n            .then((res) => res.json())\n            .then((res) => this.setState({\n                data: res.reduce((customers, currCustomer) => {\n                    console.log(currCustomer.name);\n                    let [ code, phoneNumber ] = currCustomer.phoneNumber.split(' ');\n                    code = code.replace('(', '').replace(')', '');\n                    let customer = {\n                        name: currCustomer.name,\n                        phoneNumber: phoneNumber,\n                        code: code,\n                        country: codeToCountry[code],\n                        validation: this.isValid(currCustomer.phoneNumber, code)\n                    };\n                    customers.push(customer);\n                    return customers;\n                }, []),\n                dataReady: true\n            }));\n    };\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    render() {\n\n        if (!this.state.dataReady)\n        {\n            return <div />\n        }\n\n        /* Filling the cards array with cards */\n        const rows: JSX.Element[] = [];\n        rows.push(<tr>\n                    <th>Name</th>\n                    <th>Phone</th>\n                    <th>Country</th>\n                    <th>Code</th>\n                    <th>State</th>\n                </tr>);\n\n        let customer;\n\n        for (let i = 0; i < this.state.data.length; i++)\n        {\n            customer = this.state.data[i]\n\n            rows.push(<Rows customerName={customer.name} phone={customer.phoneNumber} country={customer.country} code={customer.code} state={customer.validation}/>)\n        }\n\n        return (\n            <div style={{overflow:\"auto\"}} >\n                <table>\n\n                    {rows}\n\n                </table>\n            </div>\n\n        );\n    }\n\n}\n\nexport default DataLister;\n"]},"metadata":{},"sourceType":"module"}