{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ahmed/WebstormProjects/test/src/components/DataLister.js\";\nimport React, { Component } from 'react';\nimport Rows from \"./Rows\";\n\nclass DataLister extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isValid = (phoneNumber, code) => {\n      return RegExp(codeToRegex[code]).test(phoneNumber) ? 'valid' : 'not valid';\n    };\n\n    this.fetchData = () => {\n      fetch('http://localhost:8080/getData').then(res => res.json()).then(res => this.setState({\n        data: res.reduce((customers, currCustomer) => {\n          console.log(currCustomer.name);\n          let [code, phoneNumber] = currCustomer.phoneNumber.split(' ');\n          code = code.replace('(', '').replace(')', '');\n          let customer = {\n            name: currCustomer.name,\n            phoneNumber: phoneNumber,\n            code: code,\n            country: codeToCountry[code],\n            validation: this.isValid(currCustomer.phoneNumber, code)\n          };\n          customers.push(customer);\n          return customers;\n        }, []),\n        dataReady: true\n      }));\n    };\n\n    this.state = {\n      dataReady: false,\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    if (!this.state.dataReady) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this);\n    }\n    /* Filling the table with rows */\n\n\n    const rows = [];\n    rows.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this));\n    let customer;\n\n    for (let i = 0; i < this.state.data.length; i++) {\n      customer = this.state.data[i];\n      rows.push( /*#__PURE__*/_jsxDEV(Rows, {\n        customerName: customer.name,\n        phone: customer.phoneNumber,\n        country: customer.country,\n        code: '+' + customer.code,\n        state: customer.validation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DataLister;","map":{"version":3,"sources":["/home/ahmed/WebstormProjects/test/src/components/DataLister.js"],"names":["React","Component","Rows","DataLister","constructor","props","isValid","phoneNumber","code","RegExp","codeToRegex","test","fetchData","fetch","then","res","json","setState","data","reduce","customers","currCustomer","console","log","name","split","replace","customer","country","codeToCountry","validation","push","dataReady","state","componentDidMount","render","rows","textAlign","i","length","overflow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Rows from \"./Rows\";\n\n\nclass DataLister extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataReady: false,\n            data: []\n        };\n    }\n\n    isValid = (phoneNumber, code) => {\n        return RegExp(codeToRegex[code]).test(phoneNumber) ? 'valid' : 'not valid';\n    };\n\n    fetchData = () => {\n\n        fetch('http://localhost:8080/getData')\n            .then((res) => res.json())\n            .then((res) => this.setState({\n                data: res.reduce((customers, currCustomer) => {\n                    console.log(currCustomer.name);\n                    let [ code, phoneNumber ] = currCustomer.phoneNumber.split(' ');\n                    code = code.replace('(', '').replace(')', '');\n                    let customer = {\n                        name: currCustomer.name,\n                        phoneNumber: phoneNumber,\n                        code: code,\n                        country: codeToCountry[code],\n                        validation: this.isValid(currCustomer.phoneNumber, code)\n                    };\n                    customers.push(customer);\n                    return customers;\n                }, []),\n                dataReady: true\n            }));\n    };\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    render() {\n\n        if (!this.state.dataReady)\n        {\n            return <div />\n        }\n\n        /* Filling the table with rows */\n        const rows: JSX.Element[] = [];\n        rows.push(<tr>\n                    <th style={{textAlign: \"center\"}}>Name</th>\n                    <th style={{textAlign: \"center\"}}>Country</th>\n                    <th style={{textAlign: \"center\"}}>Code</th>\n                    <th style={{textAlign: \"center\"}}>Phone</th>\n                    <th style={{textAlign: \"center\"}}>State</th>\n                </tr>);\n\n        let customer;\n\n        for (let i = 0; i < this.state.data.length; i++)\n        {\n            customer = this.state.data[i];\n\n            rows.push(<Rows customerName={customer.name} phone={customer.phoneNumber} country={customer.country} code={'+' + customer.code} state={customer.validation}/>)\n        }\n\n        return (\n            <div style={{overflow:\"auto\"}} >\n\n                <table>\n                    {rows}\n                </table>\n            </div>\n\n        );\n    }\n\n}\n\nexport default DataLister;\n"]},"metadata":{},"sourceType":"module"}