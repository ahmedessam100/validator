{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ahmed/WebstormProjects/test/src/components/DataLister.js\";\nimport React, { Component } from 'react';\nimport Rows from './Rows';\nimport { countryToCode, codeToCountry, codeToRegex } from './../Resources';\n\nclass DataLister extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isValid = (phoneNumber, code) => {\n      return RegExp(codeToRegex[code]).test(phoneNumber) ? 'valid' : 'not valid';\n    };\n\n    this.fetchData = () => {\n      fetch('http://localhost:8080/getData').then(res => res.json()).then(res => this.setState({\n        data: res.reduce((customers, currCustomer) => {\n          let [code, phoneNumber] = currCustomer.phoneNumber.split(' ');\n          code = code.replace('(', '').replace(')', '');\n          let customer = {\n            name: currCustomer.name,\n            phoneNumber: phoneNumber,\n            code: code,\n            country: codeToCountry[code],\n            validation: this.isValid(currCustomer.phoneNumber, code)\n          };\n          customers.push(customer);\n          return customers;\n        }, []),\n        dataReady: true\n      }));\n    };\n\n    this.state = {\n      dataReady: false,\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    if (!this.state.dataReady) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 20\n      }, this);\n    }\n    /* Filling the table with rows */\n\n\n    const rows = [];\n    rows.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }, this));\n    let customer;\n\n    for (let i = 0; i < this.state.data.length; i++) {\n      customer = this.state.data[i];\n      rows.push( /*#__PURE__*/_jsxDEV(Rows, {\n        customerName: customer.name,\n        phone: customer.phoneNumber,\n        country: customer.country,\n        code: '+' + customer.code,\n        state: customer.validation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 23\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"filter\",\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DataLister;","map":{"version":3,"sources":["/home/ahmed/WebstormProjects/test/src/components/DataLister.js"],"names":["React","Component","Rows","countryToCode","codeToCountry","codeToRegex","DataLister","constructor","props","isValid","phoneNumber","code","RegExp","test","fetchData","fetch","then","res","json","setState","data","reduce","customers","currCustomer","split","replace","customer","name","country","validation","push","dataReady","state","componentDidMount","render","rows","textAlign","i","length","overflow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Rows from './Rows';\nimport { countryToCode, codeToCountry, codeToRegex } from './../Resources';\n\n\nclass DataLister extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataReady: false,\n            data: []\n        };\n    }\n\n    isValid = (phoneNumber, code) => {\n        return RegExp(codeToRegex[code]).test(phoneNumber) ? 'valid' : 'not valid';\n    };\n\n    fetchData = () => {\n\n        fetch('http://localhost:8080/getData')\n            .then((res) => res.json())\n            .then((res) => this.setState({\n\n                data: res.reduce((customers, currCustomer) => {\n\n                    let [ code, phoneNumber ] = currCustomer.phoneNumber.split(' ');\n                    code = code.replace('(', '').replace(')', '');\n\n                    let customer = {\n                        name: currCustomer.name,\n                        phoneNumber: phoneNumber,\n                        code: code,\n                        country: codeToCountry[code],\n                        validation: this.isValid(currCustomer.phoneNumber, code)\n                    };\n\n                    customers.push(customer);\n\n                    return customers;\n                }, []),\n\n                dataReady: true\n            }));\n    };\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    render() {\n\n        if (!this.state.dataReady)\n        {\n            return <div />\n        }\n\n        /* Filling the table with rows */\n        const rows: JSX.Element[] = [];\n        rows.push(<tr>\n                        <th style={{textAlign: \"center\"}}>Name</th>\n                        <th style={{textAlign: \"center\"}}>Country</th>\n                        <th style={{textAlign: \"center\"}}>Code</th>\n                        <th style={{textAlign: \"center\"}}>Phone</th>\n                        <th style={{textAlign: \"center\"}}>State</th>\n                  </tr>);\n\n        let customer;\n\n        for (let i = 0; i < this.state.data.length; i++)\n        {\n            customer = this.state.data[i];\n\n            rows.push(<Rows customerName={customer.name} phone={customer.phoneNumber} country={customer.country} code={'+' + customer.code} state={customer.validation}/>)\n        }\n\n        return (\n            <div style={{overflow:\"auto\"}} >\n                <label>Filter</label>\n                <select id={\"filter\"}>\n                    <option value={\"\"}></option>\n\n                </select>\n                <table>\n                    {rows}\n                </table>\n            </div>\n\n        );\n    }\n\n}\n\nexport default DataLister;\n"]},"metadata":{},"sourceType":"module"}